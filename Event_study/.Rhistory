tempname  <- paste("va_",ind.names[i_],"_pc",sep="")
fn.dlog100(eval(parse(text=tempname)))
for (i_ in 1 : length(ind.names))
{
tempname  <- paste("va_",ind.names[i_],"_pc",sep="")
temp      <- fn.dlog100(eval(parse(text=tempname))) %>% - mean(.[paste0(t.va_start,"/")],na.rm = TRUE)
+ mean(dl_gdp_pc[paste0(t.va_start,"/")],na.rm = TRUE)
tempname  <- paste("dl_",tempname,sep="")
assign(tempname,temp)
}
for (i_ in 1 : length(ind.names))
{
tempname  <- paste("p_",ind.names[i_],sep="")
temp      <- fn.dlog100(eval(parse(text=tempname))) %>% - mean(.[paste0(t.va_start,"/")],na.rm = TRUE)
+ mean(dl_pce_infl[paste0(t.va_start,"/")],na.rm = TRUE)
tempname  <- paste("dl_",tempname,sep="")
assign(tempname,temp)
}
View(pce_exp_lbc10yr)
i_=1
tempname  <- paste("hrs_",ind.names_pnf[i_],sep="")
tempname
fn.rat(tempname,pop_smth)
fn.rat100(tempname,pop_smth)
fn.rat100(eval(parse(text=tempname)),pop_smth)
temp      <- temp - mean(temp[paste0(t.va_start,"/")])
View(temp)
temp      <- fn.rat100(eval(parse(text=tempname)),pop_smth)
View(temp)
temp      <- temp - mean(temp[paste0(t.va_start,"/")],na.rm=TRUE)
source('~/Dropbox/Structural_change/Data/US/US_DSGE_Data/Load.US.DSGE.data.R', echo=TRUE)
estimation.data <- merge(dl_gdp_pc,
dl_consump_pc,
dl_invest2_pc,
l_hrs_pc,
dl_pce_infl,
dl_wages,
eff,
pce_exp_10yrcomb)
estimation.data <- merge(estimation.data,dl_gdp_pc)
View(estimation.data)
for (i_ in 1 : length(ind.names))
{
tempname  <- paste("dlva_",ind.names[i_],"_pc",sep="")
estimation.data <- merge(estimation.data,
eval(parse(text=tempname)))
}
for (i_ in 1 : length(ind.names))
{
tempname  <- paste("dl_va_",ind.names[i_],"_pc",sep="")
estimation.data <- merge(estimation.data,
eval(parse(text=tempname)))
}
estimation.data <- merge(dl_gdp_pc,
dl_consump_pc,
dl_invest2_pc,
l_hrs_pc,
dl_pce_infl,
dl_wages,
eff,
pce_exp_10yrcomb)
for (i_ in 1 : length(ind.names))
{
tempname  <- paste("dl_va_",ind.names[i_],"_pc",sep="")
estimation.data <- merge(estimation.data,
eval(parse(text=tempname)))
}
for (i_ in 1 : length(ind.names))
{
tempname  <- paste("dl_p_",ind.names[i_],"_pc",sep="")
estimation.data <- merge(estimation.data,
eval(parse(text=tempname)))
}
for (i_ in 1 : length(ind.names_pnf))
{
tempname  <- paste("l_hrs_",ind.names[i_],"_pc",sep="")
estimation.data <- merge(estimation.data,
eval(parse(text=tempname)))
}
for (i_ in 1 : length(ind.names_pnf))
{
tempname  <- paste("l_hrs_",ind.names_pnf[i_],"_pc",sep="")
estimation.data <- merge(estimation.data,
eval(parse(text=tempname)))
}
for (i_ in 1 : length(ind.names_pnf))
{
tempname  <- paste("l_hrs_",ind.names_pnf[i_],sep="")
estimation.data <- merge(estimation.data,
eval(parse(text=tempname)))
}
source('~/Dropbox/Structural_change/Data/US/US_DSGE_Data/Load.US.DSGE.data.R', echo=TRUE)
source('~/Dropbox/Structural_change/Data/US/US_DSGE_Data/Load.US.DSGE.data.R', echo=TRUE)
source('~/Dropbox/Structural_change/Data/US/US_DSGE_Data/Load.US.DSGE.data.R', echo=TRUE)
estplot
estplot <- ggplot(data = estimation.data.df, mapping = aes(x = dates, y = value)) +
theme_bw() +
geom_line() +
facet_wrap(facets = vars(variable), scales = "free_y") +
labs(title = "Data series used in estimation", x="",y="") +
theme(text = element_text(size = 12)) + xlim(as.Date(c("1970-01-01","2020-01-01")))
estplot <- ggplot(data = estimation.data.df, mapping = aes(x = dates, y = value)) +
theme_bw() +
geom_line() +
facet_wrap(facets = vars(variable), scales = "free_y") +
labs(title = "Data series used in estimation", x="",y="") +
theme(text = element_text(size = 12)) + xlim(as.Date(c("1970-01-01","2020-07-01")))
estplot <- ggplot(data = estimation.data.df, mapping = aes(x = dates, y = value)) +
theme_bw() +
geom_line() +
facet_wrap(facets = vars(variable), scales = "free_y") +
labs(title = "Data series used in estimation", x="",y="") +
theme(text = element_text(size = 12)) + xlim(as.Date(c("1970-01-01","2020-01-07")))
estplot <- ggplot(data = estimation.data.df, mapping = aes(x = dates, y = value)) +
theme_bw() +
geom_line() +
facet_wrap(facets = vars(variable), scales = "free_y") +
labs(title = "Data series used in estimation", x="",y="") +
theme(text = element_text(size = 12)) + xlim(as.Date(c("1970-01-01","2021-01-01")))
estplot
source('~/Dropbox/Structural_change/Data/US/US_DSGE_Data/Load.US.DSGE.data.R', echo=TRUE)
load("/Users/danielrees/Dropbox/ForwardOpen/Event_study/event_study_results.RData")
View(twoyear_lm)
View(twoyear_lm)
rm(list=ls())
load("/Users/danielrees/Dropbox/ForwardOpen/Event_study/event_study_results.RData")
View(twoyear)
View(twoyear_lm)
summary twoyear_lm
summary.lm(twoyear_lm)
source('~/Dropbox/ForwardOpen/Event_study/Event_study.R', echo=TRUE)
temp <- merge(fg.shocks.ts, eval(parse(text=paste(seriesname[1],"$dd",sep=""))),join='left')
tempmod <- lm(dd ~ fg.shocks.ts, data = temp)
robust_t <- coeftest(tempmod,vcov=vcovHC(tempmod,type = "HC0")) # Robust standard errors
tempout <- tidy(tempmod)
tempmodxl <- dust(tempmod) %>% sprinkle(cols = c("estimate", "std.error", "statistic"), round = 2) %>%
sprinkle(cols = "p.value", fn = quote(pvalString(value))) %>%
sprinkle_colnames("Term","Coefficient","SE","T-statistic",
"P-value")
write.csv(tempmodxl, paste("US_2year_rate.csv",sep=""))
write.csv(robust_t, paste("US_2year_rate_robust_t.csv",sep=""))
assign("US_twoyear_lm",tempmod)
# === Run US 2-year rate regression ===
#temp <- fg.shocks[,2]
#temp <- xts(temp, order.by=fg.shocks$Date)
temp <- merge(fg.shocks.ts, eval(parse(text=paste(seriesname[1],"$dd",sep=""))),join='left')
# === US 2 year interest rate event study ===
# Get data from FRED
seriescode <- c("DGS2")
seriesname <- c("US_twoyear")
t.start <- '2009-01-01'
for (i_ in 1 : length(seriescode))
{
temp <-  fredr(series_id = seriescode[i_],
observation_start = as.Date(t.start),
frequency = "d") %>% filter(!is.na(value)) %>%
xts(x = .$value, order.by = .$date)
names(temp) <- seriesname[i_]
temp$dd <- (as.numeric((temp[,c(1)]))) - (as.numeric(lag(temp[,c(1)])))
temp$seriesname[i_] <- as.numeric(temp$seriesname[i_])
assign(seriesname[i_],temp)
}
# === Run US 2-year rate regression ===
#temp <- fg.shocks[,2]
#temp <- xts(temp, order.by=fg.shocks$Date)
temp <- merge(fg.shocks.ts, eval(parse(text=paste(seriesname[1],"$dd",sep=""))),join='left')
tempmod <- lm(dd ~ fg.shocks.ts, data = temp)
robust_t <- coeftest(tempmod,vcov=vcovHC(tempmod,type = "HC0")) # Robust standard errors
tempout <- tidy(tempmod)
tempmodxl <- dust(tempmod) %>% sprinkle(cols = c("estimate", "std.error", "statistic"), round = 2) %>%
sprinkle(cols = "p.value", fn = quote(pvalString(value))) %>%
sprinkle_colnames("Term","Coefficient","SE","T-statistic",
"P-value")
write.csv(tempmodxl, paste("US_2year_rate.csv",sep=""))
write.csv(robust_t, paste("US_2year_rate_robust_t.csv",sep=""))
assign("US_twoyear_lm",tempmod)
source('~/Dropbox/ForwardOpen/Event_study/Event_study.R', echo=TRUE)
# === US 2 year interest rate event study ===
# Get data from FRED
seriescode <- c("DGS2")
seriesname <- c("US_twoyear")
t.start <- '2009-01-01'
for (i_ in 1 : length(seriescode))
{
temp <-  fredr(series_id = seriescode[i_],
observation_start = as.Date(t.start),
frequency = "d") %>% filter(!is.na(value)) %>%
xts(x = .$value, order.by = .$date)
names(temp) <- seriesname[i_]
temp$dd <- (as.numeric((temp[,c(1)]))) - (as.numeric(lag(temp[,c(1)])))
temp$seriesname[i_] <- as.numeric(temp$seriesname[i_])
assign(seriesname[i_],temp)
}
# === Run US 2-year rate regression ===
#temp <- fg.shocks[,2]
#temp <- xts(temp, order.by=fg.shocks$Date)
temp <- merge(fg.shocks.ts, eval(parse(text=paste(seriesname[1],"$dd",sep=""))),join='left')
tempmod <- lm(dd ~ fg.shocks.ts, data = temp)
robust_t <- coeftest(tempmod,vcov=vcovHC(tempmod,type = "HC0")) # Robust standard errors
tempout <- tidy(tempmod)
tempmodxl <- dust(tempmod) %>% sprinkle(cols = c("estimate", "std.error", "statistic"), round = 2) %>%
sprinkle(cols = "p.value", fn = quote(pvalString(value))) %>%
sprinkle_colnames("Term","Coefficient","SE","T-statistic",
"P-value")
assign("US_twoyear_lm",tempmod)
summary.lm(US_twoyear_lm)
sptsx = read.csv(sp_tsx_data)
# === Toronto stock exchange event study ===
# Load data
sptsx = read.csv("sp_tsx_data.csv")
View(sptsx)
temp <- xts(x=sptsx$Close, order.by = sptsx$Date)
sptsx$Date <- as.Date(sptsx$Date)
temp <- xts(x=sptsx$Close, order.by = sptsx$Date)
View(temp)
t.start <- '2009-01-01'
seriesname <- c("SPTSX")
seriesname <- c("SPTSX")
names(temp) <- seriesname[1]
temp$dd <- (as.numeric((temp[,c(1)]))) - (as.numeric(lag(temp[,c(1)])))
temp$seriesname[1] <- as.numeric(temp$seriesname[1])
assign(seriesname[1],temp)
View(SPTSX)
# === Toronto stock exchange event study ===
t.start <- '2009-01-01'
seriesname <- c("SPTSX")
# Load data
sptsx = read.csv("sp_tsx_data.csv")
sptsx$Date <- as.Date(sptsx$Date)
temp <- xts(x=sptsx$Close, order.by = sptsx$Date)
names(temp) <- seriesname[1]
temp$dd <- 100*(log((as.numeric((temp[,c(1)])))) - log(lag(as.numeric((temp[,c(1)])))))
temp$seriesname[1] <- as.numeric(temp$seriesname[1])
assign(seriesname[1],temp)
View(SPTSX)
View(sptsx)
# === Toronto stock exchange event study ===
t.start <- '2009-01-01'
seriesname <- c("SPTSX")
# Load data
sptsx = read.csv("sp_tsx_data.csv")
View(sptsx)
sptsx$Date <- as.Date(sptsx$Date, "%d-%m-%Y")
# === Toronto stock exchange event study ===
t.start <- '2009-01-01'
seriesname <- c("SPTSX")
# Load data
sptsx = read.csv("sp_tsx_data.csv")
sptsx$Date <- as.Date(sptsx$Date, "%d/%m/%Y")
# Load data
sptsx = read.csv("sp_tsx_data.csv")
sptsx$Date <- as.Date(sptsx$Date, "%d/%m/%y")
temp <- xts(x=sptsx$Close, order.by = sptsx$Date)
names(temp) <- seriesname[1]
temp$dd <- 100*(log((as.numeric((temp[,c(1)])))) - log(lag(as.numeric((temp[,c(1)])))))
temp$seriesname[1] <- as.numeric(temp$seriesname[1])
assign(seriesname[1],temp)
# Run stock exchange ragression
temp <- merge(fg.shocks.ts, eval(parse(text=paste(seriesname[1],"$dd",sep=""))),join='left')
tempmod <- lm(dd ~ fg.shocks.ts, data = temp)
robust_t <- coeftest(tempmod,vcov=vcovHC(tempmod,type = "HC0")) # Robust standard errors
tempout <- tidy(tempmod)
tempmodxl <- dust(tempmod) %>% sprinkle(cols = c("estimate", "std.error", "statistic"), round = 2) %>%
sprinkle(cols = "p.value", fn = quote(pvalString(value))) %>%
sprinkle_colnames("Term","Coefficient","SE","T-statistic",
"P-value")
assign("SPTSX_lm",tempmod)
View(SPTSX_lm)
summary.lm(SPTSX_lm)
# === Toronto stock exchange event study ===
t.start <- '2009-01-01'
seriesname <- c("SPTSX")
# Load data
sptsx = read.csv("sp_tsx_data.csv")
sptsx$Date <- as.Date(sptsx$Date, "%d/%m/%y")
temp <- xts(x=sptsx$Close, order.by = sptsx$Date)
names(temp) <- seriesname[1]
temp$dd <- 100*(log(lead(as.numeric((temp[,c(1)])))) - log((as.numeric((temp[,c(1)])))))
temp$seriesname[1] <- as.numeric(temp$seriesname[1])
assign(seriesname[1],temp)
# Run stock exchange ragression
temp <- merge(fg.shocks.ts, eval(parse(text=paste(seriesname[1],"$dd",sep=""))),join='left')
tempmod <- lm(dd ~ fg.shocks.ts, data = temp)
robust_t <- coeftest(tempmod,vcov=vcovHC(tempmod,type = "HC0")) # Robust standard errors
tempout <- tidy(tempmod)
tempmodxl <- dust(tempmod) %>% sprinkle(cols = c("estimate", "std.error", "statistic"), round = 2) %>%
sprinkle(cols = "p.value", fn = quote(pvalString(value))) %>%
sprinkle_colnames("Term","Coefficient","SE","T-statistic",
"P-value")
assign("SPTSX_lm",tempmod)
summary.lm(SPTSX_lm)
View(SPTSX)
# === Toronto stock exchange event study ===
t.start <- '2009-01-01'
seriesname <- c("SPTSX")
# Load data
sptsx = read.csv("sp_tsx_data.csv")
sptsx$Date <- as.Date(sptsx$Date, "%d/%m/%y")
temp <- xts(x=sptsx$Close, order.by = sptsx$Date)
names(temp) <- seriesname[1]
temp$dd <- 100*(log(lead(as.numeric((temp[,c(1)])))) - log(lag(as.numeric((temp[,c(1)])))))
temp$seriesname[1] <- as.numeric(temp$seriesname[1])
assign(seriesname[1],temp)
# Run stock exchange ragression
temp <- merge(fg.shocks.ts, eval(parse(text=paste(seriesname[1],"$dd",sep=""))),join='left')
tempmod <- lm(dd ~ fg.shocks.ts, data = temp)
robust_t <- coeftest(tempmod,vcov=vcovHC(tempmod,type = "HC0")) # Robust standard errors
tempout <- tidy(tempmod)
tempmodxl <- dust(tempmod) %>% sprinkle(cols = c("estimate", "std.error", "statistic"), round = 2) %>%
sprinkle(cols = "p.value", fn = quote(pvalString(value))) %>%
sprinkle_colnames("Term","Coefficient","SE","T-statistic",
"P-value")
assign("SPTSX_lm",tempmod)
summary.lm(SPTSX_lm)
# === Toronto stock exchange event study ===
t.start <- '2009-01-01'
seriesname <- c("SPTSX")
# Load data
sptsx = read.csv("sp_tsx_data.csv")
sptsx$Date <- as.Date(sptsx$Date, "%d/%m/%y")
temp <- xts(x=sptsx$Close, order.by = sptsx$Date)
names(temp) <- seriesname[1]
temp$dd <- 100*(log((as.numeric((temp[,c(1)])))) - log(lag(as.numeric((temp[,c(1)])))))
temp$seriesname[1] <- as.numeric(temp$seriesname[1])
assign(seriesname[1],temp)
# Run stock exchange ragression
temp <- merge(fg.shocks.ts, eval(parse(text=paste(seriesname[1],"$dd",sep=""))),join='left')
tempmod <- lm(dd ~ fg.shocks.ts, data = temp)
robust_t <- coeftest(tempmod,vcov=vcovHC(tempmod,type = "HC0")) # Robust standard errors
tempout <- tidy(tempmod)
tempmodxl <- dust(tempmod) %>% sprinkle(cols = c("estimate", "std.error", "statistic"), round = 2) %>%
sprinkle(cols = "p.value", fn = quote(pvalString(value))) %>%
sprinkle_colnames("Term","Coefficient","SE","T-statistic",
"P-value")
assign("SPTSX_lm",tempmod)
summary.lm(SPTSX_lm)
# === Toronto stock exchange event study ===
t.start <- '2009-01-01'
seriesname <- c("SPTSX")
# Load data
sptsx = read.csv("sp_tsx_data.csv")
sptsx$Date <- as.Date(sptsx$Date, "%d/%m/%y")
temp <- xts(x=sptsx$Close, order.by = sptsx$Date)
names(temp) <- seriesname[1]
temp$dd <- 100*(log(lead(as.numeric((temp[,c(1)])))) - log((as.numeric((temp[,c(1)])))))
temp$seriesname[1] <- as.numeric(temp$seriesname[1])
assign(seriesname[1],temp)
# Run stock exchange ragression
temp <- merge(fg.shocks.ts, eval(parse(text=paste(seriesname[1],"$dd",sep=""))),join='left')
tempmod <- lm(dd ~ fg.shocks.ts, data = temp)
robust_t <- coeftest(tempmod,vcov=vcovHC(tempmod,type = "HC0")) # Robust standard errors
tempout <- tidy(tempmod)
tempmodxl <- dust(tempmod) %>% sprinkle(cols = c("estimate", "std.error", "statistic"), round = 2) %>%
sprinkle(cols = "p.value", fn = quote(pvalString(value))) %>%
sprinkle_colnames("Term","Coefficient","SE","T-statistic",
"P-value")
assign("SPTSX_lm",tempmod)
summary.lm(SPTSX_lm)
# === Plot of FG shocks and change in interest rates ===
temp_df <- fortify(temp)
temp_melt <- melt(temp_df, id="Index")
temp_melt$Index <- as.Date(temp_melt$Index)
temp_plot <- ggplot(data=temp_melt, mapping = aes(x=Index, y=value, color=variable)) +
theme_classic() + ggtitle(seriesname[1]) +
geom_line() + labs(x="Date",y="ppt") + theme(legend.position = "bottom", axis.text = element_text(size=12),
panel.grid.major.y = element_line(colour="gray", size = (0.25))) +
scale_color_discrete(name = "Variable", labels = c("FG Shock", "Change in Canadian stock prices"))
print(temp_plot)
ggsave("SPTSX.pdf", height = height_ratio, width = height_ratio * aspect_ratio)
# Tidy up the workspace
rm(temp, temp_plot, temp_melt, temp_df)
summary.lm(SPTSX_lm)
View(tempmodxl)
write.csv(tempmodxl, paste("SP_TSX.csv",sep=""))
write.csv(robust_t, paste("SP_TSX_robust_t.csv",sep=""))
t.start <- '2009-01-01'
seriesname <- c("SPTSX")
# Load data
sptsx = read.csv("sp_tsx_data.csv")
sptsx$Date <- as.Date(sptsx$Date, "%d/%m/%y")
temp <- xts(x=sptsx$Close, order.by = sptsx$Date)
names(temp) <- seriesname[1]
temp$dd <- 100*(log((as.numeric((temp[,c(1)])))) - log((as.numeric((temp[,c(1)])))))
temp$seriesname[1] <- as.numeric(temp$seriesname[1])
assign(seriesname[1],temp)
# Run stock exchange ragression
temp <- merge(fg.shocks.ts, eval(parse(text=paste(seriesname[1],"$dd",sep=""))),join='left')
tempmod <- lm(dd ~ fg.shocks.ts, data = temp)
robust_t <- coeftest(tempmod,vcov=vcovHC(tempmod,type = "HC0")) # Robust standard errors
tempout <- tidy(tempmod)
tempmodxl <- dust(tempmod) %>% sprinkle(cols = c("estimate", "std.error", "statistic"), round = 2) %>%
sprinkle(cols = "p.value", fn = quote(pvalString(value))) %>%
sprinkle_colnames("Term","Coefficient","SE","T-statistic",
"P-value")
write.csv(tempmodxl, paste("SP_TSX.csv",sep=""))
write.csv(robust_t, paste("SP_TSX_robust_t.csv",sep=""))
t.start <- '2009-01-01'
seriesname <- c("SPTSX")
# Load data
sptsx = read.csv("sp_tsx_data.csv")
sptsx$Date <- as.Date(sptsx$Date, "%d/%m/%y")
temp <- xts(x=sptsx$Close, order.by = sptsx$Date)
names(temp) <- seriesname[1]
temp$dd <- 100*(log((as.numeric((temp[,c(1)])))) - log((as.numeric((temp[,c(1)])))))
temp$seriesname[1] <- as.numeric(temp$seriesname[1])
assign(seriesname[1],temp)
# Run stock exchange ragression
temp <- merge(fg.shocks.ts, eval(parse(text=paste(seriesname[1],"$dd",sep=""))),join='left')
tempmod <- lm(dd ~ fg.shocks.ts, data = temp)
robust_t <- coeftest(tempmod,vcov=vcovHC(tempmod,type = "HC0")) # Robust standard errors
tempout <- tidy(tempmod)
tempmodxl <- dust(tempmod) %>% sprinkle(cols = c("estimate", "std.error", "statistic"), round = 2) %>%
sprinkle(cols = "p.value", fn = quote(pvalString(value))) %>%
sprinkle_colnames("Term","Coefficient","SE","T-statistic",
"P-value")
write.csv(tempmodxl, paste("SP_TSX.csv",sep=""))
write.csv(robust_t, paste("SP_TSX_robust_t.csv",sep=""))
# === Toronto stock exchange event study ===
t.start <- '2009-01-01'
seriesname <- c("SPTSX")
# Load data
sptsx = read.csv("sp_tsx_data.csv")
sptsx$Date <- as.Date(sptsx$Date, "%d/%m/%y")
temp <- xts(x=sptsx$Close, order.by = sptsx$Date)
names(temp) <- seriesname[1]
temp$dd <- 100*(log((as.numeric((temp[,c(1)])))) - log(lag(as.numeric((temp[,c(1)])))))
temp$seriesname[1] <- as.numeric(temp$seriesname[1])
assign(seriesname[1],temp)
# Run stock exchange ragression
temp <- merge(fg.shocks.ts, eval(parse(text=paste(seriesname[1],"$dd",sep=""))),join='left')
tempmod <- lm(dd ~ fg.shocks.ts, data = temp)
robust_t <- coeftest(tempmod,vcov=vcovHC(tempmod,type = "HC0")) # Robust standard errors
tempout <- tidy(tempmod)
tempmodxl <- dust(tempmod) %>% sprinkle(cols = c("estimate", "std.error", "statistic"), round = 2) %>%
sprinkle(cols = "p.value", fn = quote(pvalString(value))) %>%
sprinkle_colnames("Term","Coefficient","SE","T-statistic",
"P-value")
write.csv(tempmodxl, paste("SP_TSX.csv",sep=""))
write.csv(robust_t, paste("SP_TSX_robust_t.csv",sep=""))
assign("SPTSX_lm",tempmod)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
get_cansmi_vector("v39065")
get_cansim_vector("v39065")
get_cansim_vector("v39065", start_time = "2009-01-01")
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
View(temp)
temp <-  fredr(series_id = seriescode[i_],
observation_start = as.Date(t.start),
observation_end = as.Date(t.end),
frequency = "d") %>% filter(!is.na(value)) %>%
xts(x = .$value, order.by = .$date)
names(temp) <- seriesname[i_]
temp$dd <- (as.numeric((temp[,c(1)]))) - (as.numeric(lag(temp[,c(1)])))
as.numeric((temp[,c(1)])))
as.numeric((temp[,c(1)]))
(as.numeric(lag(temp[,c(1)]))
)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
?lag
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
rm(temp)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study_Canadian_data.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study.R', echo=TRUE)
View(US_twoyear_lm)
View(tempmodxl)
?write.xlsx
write.xlsx(robust_t, "event_study_results.xlsx", sheetName = paste(cirnam[i_]) )
write.xlsx(robust_t, "event_study_results.xlsx", sheetName = paste(cirnam[i_]), asTable = TRUE )
robust_t
typeof(robust_t)
write.xlsx(robust_t, "event_study_results.xlsx", asTable = TRUE,  sheetName = paste(cirnam[i_]))
write.xlsx(robust_t, "event_study_results.xlsx", asTable = FALSE,  sheetName = paste(cirnam[i_]))
write.csv(robust_t, "event_study_results.xlsx", asTable = FALSE,  sheetName = paste(cirnam[i_]))
?coeftest
robust_t
paste(cirname[i_],".estimates") <- robust_t
paste(cirnam[i_],".estimates") <- robust_t
paste(cirnam[i_],".estimates")
paste(cirnam[i_],".estimates",sep="") <- robust_t
paste(cirnam[i_],".estimates",sep="") == robust_t
rename(robst_t, paste(cirnam[i_],".estimates",sep="") )
rename(robust_t, paste(cirnam[i_],".estimates",sep="") )
assign( paste(cirnam[i_],".estimates",sep=""), robust_t )
Exchange_Rate.estimates
as.data.frame(Exchange_Rate.estimates)
source('~/Desktop/Event_study/Event_study.R', echo=TRUE)
print Exchange_Rate.estimates
display Exchange_Rate.estimates
show(Exchange_Rate.estimates)
source('~/Desktop/Event_study/Event_study.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study.R', echo=TRUE)
source('~/Desktop/Event_study/Event_study.R', echo=TRUE)
show("Estimates for:")
source('~/Desktop/Event_study/Event_study.R', echo=TRUE)
